name = "Reference",
values = c("No Difference Line" = "dashed")
) +
# Labels and theme
labs(
title = "Survival Ratio plot for Path. stage II/ IV ",
x = "Time (Days)",
y = "Survival Ratio (Pathologic Stage II / Stage IV)"
) +
theme_minimal() +
theme(
legend.position = "right",  # Position of the legend
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
plot.title = element_text(face = "bold", size = 18)
)+
annotate("text", x = max(plot_data_stage2_4$Time) * 0.3, y = 6, label = "Higher survival for Pathologic stage 2", hjust = 0) +
annotate("text", x = max(plot_data_stage2_4$Time) * 0.3, y = 0.5, label = "Higher survival for pathologic stage 4", hjust = 0)
ggplot(plot_data_stage2_4, aes(x = time)) +
# Survival ratio line
geom_line(aes(y = ratio, color = "Survival Ratio"), size = 1.2) +
# Confidence interval ribbon
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = "95% Confidence Interval"), alpha = 0.3) +
# Reference line
geom_hline(aes(yintercept = 1, linetype = "No Difference Line"), color = "red", size = 1 ) +
# Custom scales for the legend
scale_color_manual(
name = "Line",
values = c("Survival Ratio" = "green")
) +
scale_fill_manual(
name = "Confidence Bands",
values = c(
"95% Confidence Interval" = "blue"
)
) +
scale_linetype_manual(
name = "Reference",
values = c("No Difference Line" = "dashed")
) +
# Labels and theme
labs(
title = "Survival Ratio plot for Path. stage II/ IV ",
x = "Time (Days)",
y = "Survival Ratio (Pathologic Stage II / Stage IV)"
) +
theme_minimal() +
theme(
legend.position = "right",  # Position of the legend
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
plot.title = element_text(face = "bold", size = 18)
)+
annotate("text", x = max(plot_data_stage2_4$Time) * 0.3, y = 14, label = "Higher survival for Pathologic stage 2", hjust = 0) +
annotate("text", x = max(plot_data_stage2_4$Time) * 0.3, y = 0.5, label = "Higher survival for pathologic stage 4", hjust = 0)
path_stage1_2_df<- surv_brca_cli|> select(time,vital_status,pathologic_stage)|> filter(pathologic_stage == "Stage I" | pathologic_stage == "Stage II")
fit12 <- survfit(Surv(time,vital_status)~pathologic_stage, data = path_stage1_2_df)
ggsurvplot(
fit12,
conf.int = TRUE,
risk.table = TRUE,
xlab = "Time in days",
ylab = "Survival Probability",
ggtheme = theme_minimal(),
pval = TRUE
)
#KM fit of the data
km_fit_path_stageII <- survfit(Surv(time= time, event=vital_status) ~ 1, data = subset(surv_brca_cli, pathologic_stage == "Stage II"))
km_fit_path_stageI <- survfit(Surv(time= time, event=vital_status) ~ 1, data = subset(surv_brca_cli, pathologic_stage == "Stage I"))
####extract survival probabilities
# Manually define time points (we mentained the exact time in the data set in days )
manual_times <- seq(0, max(surv_brca_cli$time, na.rm = TRUE), by = 1)
# Extract survival probabilities for Pathologic stage 2
surv_pathII <- summary(km_fit_path_stageII, times = manual_times, extend = TRUE)$surv
# Extract survival probabilities for pathologic stage 3
surv_pathI <- summary(km_fit_path_stageI, times = manual_times, extend = TRUE)$surv
# Survival ratios and confidence intervals
survival_ratio_stage1_2 <- surv_pathI / surv_pathII
# Confidence intervals using the Delta method
# Extract Variances  for Pathologic stage 2 and 3
var_pathII <- (summary(km_fit_path_stageII, times = manual_times, extend = TRUE)$std.err)^2
var_pathI <- (summary(km_fit_path_stageI, times = manual_times, extend = TRUE)$std.err)^2
# Log-transformed survival ratio
log_ratio_stage2_4 <- log(survival_ratio_stage2_4)
# Variance of the log survival ratio
log_ratio_var_stage2_4 <- var_pathIV / (surv_pathIV^2) + var_pathII / (surv_pathII^2)
# Confidence intervals for log-ratio
z_value <- qnorm(0.975)
lower_log_stage2_4 <- log_ratio_stage2_4 - z_value * sqrt(log_ratio_var_stage2_4)
upper_log_stage2_4 <- log_ratio_stage2_4 + z_value * sqrt(log_ratio_var_stage2_4)
# Back-transform to get confidence intervals for the ratio
lower_ci_stage2_4 <- exp(lower_log_stage2_4)
upper_ci_stage2_4 <- exp(upper_log_stage2_4)
# Add CI to the plot
plot_data_stage2_4 <- data.frame(
time = manual_times,
ratio = survival_ratio_stage2_4,
lower_ci = lower_ci_stage2_4,
upper_ci = upper_ci_stage2_4
)
# Confidence intervals using the Delta method
# Extract Variances  for Pathologic stage 2 and 3
var_pathII <- (summary(km_fit_path_stageII, times = manual_times, extend = TRUE)$std.err)^2
var_pathI <- (summary(km_fit_path_stageI, times = manual_times, extend = TRUE)$std.err)^2
# Log-transformed survival ratio
log_ratio_stage1_2 <- log(survival_ratio_stage1_2)
# Variance of the log survival ratio
log_ratio_var_stage1_2 <- var_pathI / (surv_pathI^2) + var_pathII / (surv_pathII^2)
# Confidence intervals for log-ratio
z_value <- qnorm(0.975)
lower_log_stage1_2 <- log_ratio_stage1_2 - z_value * sqrt(log_ratio_var_stage1_2)
upper_log_stage1_2 <- log_ratio_stage2_4 + z_value * sqrt(log_ratio_var_stage1_2)
# Back-transform to get confidence intervals for the ratio
lower_ci_stage1_2 <- exp(lower_log_stage1_2)
upper_ci_stage1_2 <- exp(upper_log_stage1_2)
# Add CI to the plot
plot_data_stage1_2 <- data.frame(
time = manual_times,
ratio = survival_ratio_stage1_2,
lower_ci = lower_ci_stage1_2,
upper_ci = upper_ci_stage1_2
)
# Confidence intervals using the Delta method
# Extract Variances  for Pathologic stage 2 and 3
var_pathII <- (summary(km_fit_path_stageII, times = manual_times, extend = TRUE)$std.err)^2
var_pathI <- (summary(km_fit_path_stageI, times = manual_times, extend = TRUE)$std.err)^2
# Log-transformed survival ratio
log_ratio_stage1_2 <- log(survival_ratio_stage1_2)
# Variance of the log survival ratio
log_ratio_var_stage1_2 <- var_pathI / (surv_pathI^2) + var_pathII / (surv_pathII^2)
# Confidence intervals for log-ratio
z_value <- qnorm(0.975)
lower_log_stage1_2 <- log_ratio_stage1_2 - z_value * sqrt(log_ratio_var_stage1_2)
upper_log_stage1_2 <- log_ratio_stage1_2 + z_value * sqrt(log_ratio_var_stage1_2)
# Back-transform to get confidence intervals for the ratio
lower_ci_stage1_2 <- exp(lower_log_stage1_2)
upper_ci_stage1_2 <- exp(upper_log_stage1_2)
# Add CI to the plot
plot_data_stage1_2 <- data.frame(
time = manual_times,
ratio = survival_ratio_stage1_2,
lower_ci = lower_ci_stage1_2,
upper_ci = upper_ci_stage1_2
)
ggplot(plot_data_stage1_2, aes(x = time)) +
# Survival ratio line
geom_line(aes(y = ratio, color = "Survival Ratio"), size = 1.2) +
# Confidence interval ribbon
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = "95% Confidence Interval"), alpha = 0.3) +
# Reference line
geom_hline(aes(yintercept = 1, linetype = "No Difference Line"), color = "red", size = 1 ) +
# Custom scales for the legend
scale_color_manual(
name = "Line",
values = c("Survival Ratio" = "green")
) +
scale_fill_manual(
name = "Confidence Bands",
values = c(
"95% Confidence Interval" = "blue"
)
) +
scale_linetype_manual(
name = "Reference",
values = c("No Difference Line" = "dashed")
) +
# Labels and theme
labs(
title = "Survival Ratio plot for Path. stage I/ II ",
x = "Time (Days)",
y = "Survival Ratio (Pathologic Stage I / Stage II)"
) +
theme_minimal() +
theme(
legend.position = "right",  # Position of the legend
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
plot.title = element_text(face = "bold", size = 18)
)+
annotate("text", x = max(plot_data_stage2_4$Time) * 0.3, y = 2, label = "Higher survival for Pathologic stage 2", hjust = 0) +
annotate("text", x = max(plot_data_stage2_4$Time) * 0.3, y = 0.5, label = "Higher survival for pathologic stage 4", hjust = 0)
ggplot(plot_data_stage1_2, aes(x = time)) +
# Survival ratio line
geom_line(aes(y = ratio, color = "Survival Ratio"), size = 1.2) +
# Confidence interval ribbon
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = "95% Confidence Interval"), alpha = 0.3) +
# Reference line
geom_hline(aes(yintercept = 1, linetype = "No Difference Line"), color = "red", size = 1 ) +
# Custom scales for the legend
scale_color_manual(
name = "Line",
values = c("Survival Ratio" = "green")
) +
scale_fill_manual(
name = "Confidence Bands",
values = c(
"95% Confidence Interval" = "blue"
)
) +
scale_linetype_manual(
name = "Reference",
values = c("No Difference Line" = "dashed")
) +
# Labels and theme
labs(
title = "Survival Ratio plot for Path. stage I/ II ",
x = "Time (Days)",
y = "Survival Ratio (Pathologic Stage I / Stage II)"
) +
theme_minimal() +
theme(
legend.position = "right",  # Position of the legend
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
plot.title = element_text(face = "bold", size = 18)
)+
annotate("text", x = max(plot_data_stage2_4$Time) * 0.3, y = 2, label = "Higher survival for Pathologic stage 1", hjust = 0) +
annotate("text", x = max(plot_data_stage2_4$Time) * 0.3, y = 0.5, label = "Higher survival for pathologic stage 2", hjust = 0)
knitr::opts_chunk$set(echo = TRUE)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(tidyverse)
# Import the TSV file TCGA brca clinical data
brca_clinical <- read.delim("clinical.tsv")
#sapply(brca_clinical,class)
names(brca_clinical)
head(brca_clinical)
nrow(brca_clinical)
brca_cli_sub<- brca_clinical|>select(case_id,gender,race,ethnicity,age_at_index, year_of_birth,year_of_death,age_at_diagnosis,vital_status,days_to_diagnosis,days_to_death,days_to_last_follow_up,ajcc_pathologic_stage, ajcc_pathologic_t, ajcc_pathologic_n,ajcc_pathologic_m,treatment_type,)
head(brca_cli_sub)
names(brca_clinical)
##rename column
colnames(brca_cli_sub)<- c("case_id","gender","race","ethnicity","age_at_index", "year_of_birth","year_of_death","age_at_diagnosis","vital_status","days_to_diagnosis","days_to_death","days_to_last_follow_up", "pathologic_stage","pathologic_t","pathologic_n","pathologic_m","treatment_type")
brca_cli_sub<- brca_cli_sub|> mutate(age_at_diagnosis=as.numeric(age_at_diagnosis),days_to_death=as.numeric(days_to_death),days_to_last_follow_up=as.numeric(days_to_last_follow_up))
#conversion of time from days to years
#brca_cli_sub<- brca_cli_sub|>mutate(age_diag_yrs=age_at_diagnosis/365.25,yrs_to_event=days_to_death/365.25,yrs_to_last_follow_up=days_to_last_follow_up/365.25)
###remain with high level stages
brca_cli_sub <- brca_cli_sub %>%
mutate(pathologic_stage = case_when(
grepl("Stage ([IVX]+)[A-Z]*", pathologic_stage) ~ gsub("Stage ([IVX]+)[A-Z]*", "Stage \\1", pathologic_stage),
TRUE ~ "Unspecified"
))
head(brca_cli_sub)
#modification of the treatment type into 2 categories
brca_cli_sub <- brca_cli_sub %>%
mutate(treatment_type = case_when(
grepl("Pharmaceutical Therapy, NOS", treatment_type, ignore.case = TRUE) ~ "Chemotherapy",
grepl("Radiation Therapy, NOS",treatment_type, ignore.case = TRUE) ~ "Radiotherapy",
TRUE ~ "Other"))
#  Modify "race" to include only three categories
brca_cli_sub <- brca_cli_sub %>%
mutate(race = case_when(
grepl("black or african american", race, ignore.case = TRUE) ~ "Black or African American",
grepl("white", race, ignore.case = TRUE) ~ "White",
TRUE ~ "Other"
))
##remove male patients
#brca_cli_sub <- brca_cli_sub %>%filter(tolower(gender) != "male"| is.na(gender))
##remove negative time to follow up
#brca_cli_sub <- brca_cli_sub %>%filter(days_to_last_follow_up >= 0)
#brca_cli_sub <- brca_cli_sub %>%filter(days_to_last_follow_up >= 0,yrs_to_last_follow_up>=0)
summary(brca_cli_sub)
brca_cli_sub %>%
ggplot(aes(x = age_at_diagnosis)) +
geom_histogram(binwidth = 2, na.rm = TRUE, fill = "blue", color = "black") +
labs(
title = "Distribution of Age at Diagnosis",
x = "Age at Diagnosis (Years)",
y = "Count"
)
brca_cli_sub %>%
ggplot(aes(x = days_to_death)) +
geom_histogram(bins = 30, na.rm = TRUE, fill = "blue", color = "black") +
labs(
title = "Distribution of time to event",
x = "time to event (Years)",
y = "Count"
)
brca_cli_sub %>%
ggplot(aes(x = days_to_last_follow_up)) +
geom_histogram(bins = 30, na.rm = TRUE, fill = "blue", color = "black") +
labs(
title = "Distribution of time of follow up",
x = "time of follow up (Years)",
y = "Count"
)
summary(brca_cli_sub$age_diag_yrs)
addmargins(table(brca_cli_sub$vital_status,brca_cli_sub$treatment_type))
addmargins(table(brca_cli_sub$race,brca_cli_sub$vital_status))
#USING IF ELSE
#brca_cli_sub<- brca_cli_sub|> mutate(time= if_else(is.na(days_to_death),days_to_last_follow_up,days_to_death))
#USING RESHAPE
#transformation to long format
brca_cli_sub <- brca_cli_sub %>%
mutate(id = row_number())
brca_cli_sub_long<- reshape(
brca_cli_sub,
varying = list(c("days_to_last_follow_up", "days_to_death")),
v.names = "time",
timevar = "source",
times = c("days_to_last_follow_up", "days_to_death"),
direction = "long"
)
head(brca_cli_sub_long)
#filling the missing values in long format
filled_time<- brca_cli_sub_long %>%
group_by(id) %>%
summarize(time = first(na.omit(time)), .groups = "drop")
#reshape back to wide format ,
#data set with merged time
brca_cli_sub_filled<-brca_cli_sub|> select(-days_to_death,-days_to_last_follow_up) |> left_join(filled_time, by = "id")
head(brca_cli_sub_filled)
##keep only female patients
brca_cli_sub_filled <- brca_cli_sub_filled %>%filter(tolower(gender) == "female")
##Keep needed variables only
##remove negative time
brca_cli_sub_filled <- brca_cli_sub_filled %>%filter(time >= 0)
#sort the data set by treatment, to keep individual patient instead of duplicates  , for further analysis,
brca_cli_sub_chemo <- brca_cli_sub_filled|> filter(treatment_type == "Chemotherapy")
####Survival data set
surv_brca_cli<- brca_cli_sub_chemo|> select(gender,race,ethnicity,vital_status,pathologic_stage,pathologic_t,pathologic_n,pathologic_m,time)
surv_brca_cli <- surv_brca_cli |> mutate(time_in_years = time /365.25 )
summary(surv_brca_cli)
hist(surv_brca_cli$time_in_years)
#change columns from characters to factors
surv_brca_cli[] <- lapply(surv_brca_cli, function(x) if(!is.numeric(x)) as.factor(x) else x)
sapply(surv_brca_cli,class)
#encode vital status
surv_brca_cli <- surv_brca_cli|> mutate( vital_status= ifelse(vital_status == "Alive", 0, 1))
colSums(is.na(surv_brca_cli))
write.csv(surv_brca_cli, file = "surv_brca_cli.csv", row)
#fit the kaplan meier model
#fit the kaplan maier model
fit_ethn <- survfit(surv_object ~ ethnicity , data = surv_brca_cli)
#plot the survival curve
ggsurvplot(
fit_ethn,
size = 1.5,                  # Line thickness
font.x = c(10, "bold"),      # Font size for X-axis
font.y = c(10, "bold"),      # Font size for Y-axis
font.tickslab = c(10),       # Font size for tick labels
legend = "right",             # Legend position
conf.int = TRUE,
risk.table = TRUE,
pval = TRUE,
xlab = "Time(years)",
ylab = "Survival Probability",
ggtheme = theme_minimal(),
legend.title = "race",
risk.table.height = 0.3,
surv.median.line = "hv"
)
#fit the kaplan maier model
fit_race <- survfit(surv_object ~ race , data = surv_brca_cli)
#plot the survival curve
ggsurvplot(
fit_race,
size = 1.5,
font.x = c(12, "bold"),
font.y = c(12, "bold"),
font.tickslab = c(10),
legend = "right",
conf.int = TRUE,
risk.table = TRUE,
pval = TRUE,
xlab = "Time(years)",
ylab = "Survival Probability",
ggtheme = theme_minimal(),
legend.title = "race",
risk.table.height = 0.3,
surv.median.line = "hv"
)
#fit the kaplan maier model
fit_race <- survfit(surv_object ~ race , data = surv_brca_cli)
#plot the survival curve
ggsurvplot(
fit_race,
size = 1.5,
font.x = c(12, "bold"),
font.y = c(12, "bold"),
font.tickslab = c(10),
legend = "right",
conf.int = TRUE,
risk.table = TRUE,
pval = TRUE,
xlab = "Time(years)",
ylab = "Survival Probability",
ggtheme = theme_minimal(),
legend.title = "race",
risk.table.height = 0.3,
surv.median.line = "hv"
)
#fit the kaplan maier model
fit_race <- survfit(surv_object ~ race , data = surv_brca_cli)
#plot the survival curve
ggsurvplot(
fit_race,
size = 1.5,
font.x = c(12, "bold"),
font.y = c(12, "bold"),
font.tickslab = c(10),
legend = "right",
conf.int = TRUE,
risk.table = TRUE,
pval = TRUE,
xlab = "Time(years)",
ylab = "Survival Probability",
ggtheme = theme_minimal(),
legend.title = "race",
risk.table.height = 0.3,
surv.median.line = "hv" ,
title = "survival plot by race"
)
View(brca_cli_sub)
km_fit_race_white <- survfit(Surv(time= time, event=vital_status) ~ 1, data = subset(surv_brca_cli, race == "White"))
km_fit_race_black <- survfit(Surv(time= time, event=vital_status) ~ 1, data = subset(surv_brca_cli, pathologic_stage == "Black or African American"))
km_fit_race_white <- survfit(Surv(time= time, event=vital_status) ~ 1, data = subset(surv_brca_cli, race == "White"))
km_fit_race_black <- survfit(Surv(time= time, event=vital_status) ~ 1, data = subset(surv_brca_cli, race == "Black or African American"))
#KM fit of the data
km_fit_race_white <- survfit(Surv(time= time, event=vital_status) ~ 1, data = subset(surv_brca_cli, race == "White"))
km_fit_race_black <- survfit(Surv(time= time, event=vital_status) ~ 1, data = subset(surv_brca_cli, race == "Black or African American"))
####extract survival probabilities
# Manually define time points (we mentained the exact time in the data set in days )
manual_times <- seq(0, max(surv_brca_cli$time, na.rm = TRUE), by = 1)
# Extract survival probabilities for Pathologic stage 2
surv_white <- summary(km_fit_race_white, times = manual_times, extend = TRUE)$surv
# Extract survival probabilities for pathologic stage 3
surv_black <- summary(km_fit_race_black, times = manual_times, extend = TRUE)$surv
# Survival ratios and confidence intervals
survival_ratio_race <- surv_white / surv_black
# Confidence intervals using the Delta method
# Extract Variances  for Pathologic stage 2 and 3
var_white <- (summary(km_fit_race_white, times = manual_times, extend = TRUE)$std.err)^2
var_black <- (summary(km_fit_race_black, times = manual_times, extend = TRUE)$std.err)^2
# Log-transformed survival ratio
log_ratio_race <- log(survival_ratio_race)
# Variance of the log survival ratio
log_ratio_var_race <- var_white / (surv_white^2) + var_black / (surv_white^2)
# Confidence intervals for log-ratio
z_value <- qnorm(0.975)
lower_log_race <- log_ratio_race - z_value * sqrt(log_ratio_var_race)
upper_log_race <- log_ratio_race + z_value * sqrt(log_ratio_var_race)
# Back-transform to get confidence intervals for the ratio
lower_ci_race <- exp(lower_log_race)
upper_ci_race <- exp(upper_log_race)
# Add CI to the plot
plot_data_race <- data.frame(
time = manual_times,
ratio = survival_ratio_race,
lower_ci = lower_ci_race,
upper_ci = upper_ci_race
)
ggplot(plot_data_race, aes(x = time)) +
# Survival ratio line
geom_line(aes(y = ratio, color = "Survival Ratio"), size = 1.2) +
# Confidence interval ribbon
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = "95% Confidence Interval"), alpha = 0.3) +
# Reference line
geom_hline(aes(yintercept = 1, linetype = "No Difference Line"), color = "red", size = 1 ) +
# Custom scales for the legend
scale_color_manual(
name = "Line",
values = c("Survival Ratio" = "green")
) +
scale_fill_manual(
name = "Confidence Bands",
values = c(
"95% Confidence Interval" = "blue"
)
) +
scale_linetype_manual(
name = "Reference",
values = c("No Difference Line" = "dashed")
) +
# Labels and theme
labs(
title = "Survival Ratio plot for White/Black ",
x = "Time (Days)",
y = "Survival Ratio (Pathologic Stage White/Black)"
) +
theme_minimal() +
theme(
legend.position = "right",  # Position of the legend
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
plot.title = element_text(face = "bold", size = 18)
)+
annotate("text", x = max(plot_data_stage2_4$Time) * 0.3, y = 2, label = "Higher survival for white ", hjust = 0) +
annotate("text", x = max(plot_data_stage2_4$Time) * 0.3, y = 0.5, label = "Higher survival for Black or African American", hjust = 0)
#fit the kaplan maier model
fit_race <- survfit(surv_object ~ race , data = surv_brca_cli)
#plot the survival curve
ggsurvplot(
fit_race,
size = 1.5,
font.x = c(12, "bold"),
font.y = c(12, "bold"),
font.tickslab = c(10),
legend = "right",
conf.int = TRUE,
risk.table = TRUE,
pval = TRUE,
xlab = "Time(years)",
ylab = "Survival Probability",
ggtheme = theme_minimal(),
legend.title = "race",
risk.table.height = 0.3,
surv.median.line = "hv" ,
title = "KM  plot by race"
)
